import "dotenv/config";
import { getExplorerLink } from "@solana-developers/helpers";
import { Connection, Keypair, PublicKey, clusterApiUrl } from "@solana/web3.js";
import { getOrCreateAssociatedTokenAccount } from "@solana/spl-token";

// –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
let privateKey = process.env["SECRET_KEY"];
if (privateKey === undefined) {
  console.log("Add SECRET_KEY to .env!");
  process.exit(1);
}
// –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –≤ –º–∞—Å—Å–∏–≤ –±–∞–π—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ 'Keypair'
const asArray = Uint8Array.from(JSON.parse(privateKey));
// —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç Keypair => –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
const sender = Keypair.fromSecretKey(asArray);
// –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ 'Solana devnet'
const connection = new Connection(clusterApiUrl("devnet"));

console.log(`üîë Our pubic key is: ${sender.publicKey.toBase58()}`);

// –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á —Ç–æ–∫–µ–Ω–Ω–æ–≥–æ –º–∏–Ω—Ç–∞
const tokenMintAccount = new PublicKey(
  "J1kPQXYG5LenR31aCQP5oWXpfFebeQ9kefUCoe3kxaRn"
);
// –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –ø–æ–ª—É—á–∞—Ç–µ–ª—è —Ç–æ–∫–µ–Ω–æ–≤
const recipient = new PublicKey("H1TUhEgTMcbQfv54TQoQA4sNsrdDEVLUtFn1AuK7fZXq");

// —Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∞—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ —Ç–æ–∫–µ–Ω–Ω–æ–≥–æ –º–∏–Ω—Ç–∞
const tokenAccount = await getOrCreateAssociatedTokenAccount(
  connection,
  sender,
  tokenMintAccount,
  recipient
);

console.log(`Token Account: ${tokenAccount.address.toBase58()}`);

// —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ Solana Explorer
const link = getExplorerLink(
  "address",
  tokenAccount.address.toBase58(),
  "devnet"
);

console.log(`‚úÖ Created token account: ${link}`);
